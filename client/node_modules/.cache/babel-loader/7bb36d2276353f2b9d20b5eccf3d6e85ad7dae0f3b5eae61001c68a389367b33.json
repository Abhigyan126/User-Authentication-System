{"ast":null,"code":"var _jsxFileName = \"/Users/abhigyan/Documents/mern/client/src/pages/quote.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport jwt from 'jsonwebtoken';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const [quote, setQuote] = useState('');\n  const [tempQuote, setTempQuote] = useState('');\n  const [userInfo, setUserInfo] = useState({\n    username: '',\n    email: ''\n  });\n  async function populateQuote() {\n    const req = await fetch('http://localhost:1337/api/quote', {\n      headers: {\n        'X-access-token': localStorage.getItem('token')\n      }\n    });\n    const data = await req.json();\n    if (data.status === 'ok') {\n      setQuote(data.quote);\n    } else {\n      alert(data.error);\n    }\n  }\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const user = jwt.decode(token);\n      if (!user) {\n        localStorage.removeItem('token');\n        navigate('/login');\n      } else {\n        setUserInfo({\n          username: user.Name,\n          email: user.email\n        });\n        populateQuote();\n      }\n    }\n  }, []);\n  async function updateQuote() {\n    const req = await fetch('http://localhost:1337/api/quote', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-access-token': localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        quote: tempQuote\n      })\n    });\n    const data = await req.json();\n    if (data.status === 'ok') {\n      setQuote(tempQuote);\n      setTempQuote('');\n    } else {\n      alert(data.error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome, \", userInfo.username || 'User', \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Email: \", userInfo.email || 'Email not available']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"your quote: \", quote || 'no quote found']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: updateQuote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Quote\",\n        value: tempQuote,\n        onChange: e => setTempQuote(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Update quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"ef+WHlkhe8rdRDFYwpFzGC5kmXU=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","jwt","useNavigate","jsxDEV","_jsxDEV","Dashboard","_s","navigate","quote","setQuote","tempQuote","setTempQuote","userInfo","setUserInfo","username","email","populateQuote","req","fetch","headers","localStorage","getItem","data","json","status","alert","error","token","user","decode","removeItem","Name","updateQuote","method","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/abhigyan/Documents/mern/client/src/pages/quote.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport jwt from 'jsonwebtoken'\nimport { useNavigate } from 'react-router-dom'\n\nconst Dashboard = () => {\n    const navigate = useNavigate()\n    const [quote, setQuote] = useState('')\n    const [tempQuote, setTempQuote] = useState('')\n    const [userInfo, setUserInfo] = useState({ username: '', email: '' })\n    async function populateQuote() {\n        const req = await fetch('http://localhost:1337/api/quote', {\n            headers: {\n                'X-access-token': localStorage.getItem('token'),\n            },\n        })\n\n        const data = await req.json()\n        if(data.status === 'ok') {\n            setQuote(data.quote)\n        } else {\n            alert(data.error)\n        }\n    }\n\n    useEffect(() => {\n        const token = localStorage.getItem('token')\n        if(token) {\n            const user = jwt.decode(token)\n            if(!user) {\n                localStorage.removeItem('token')\n                navigate('/login')\n            } else {\n                setUserInfo({ username: user.Name, email: user.email })\n                populateQuote()\n            }\n        }\n    }, [])\n\n    async function updateQuote() {\n        const req = await fetch('http://localhost:1337/api/quote', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-access-token': localStorage.getItem('token'),\n            },\n            body: JSON.stringify({\n                quote: tempQuote,\n            }),\n\n        })\n\n        const data = await req.json()\n        if(data.status === 'ok') {\n            setQuote(tempQuote)\n            setTempQuote('')\n        } else {\n            alert(data.error)\n        }\n    }\n\n    return (\n    <div>\n        <h1>Welcome, {userInfo.username || 'User'}!</h1>\n        <h2>Email: {userInfo.email || 'Email not available'}</h2>\n        <br />\n        <h1>your quote: {quote || 'no quote found'}</h1>\n        <form onSubmit={updateQuote}>\n            <input type ='text' placeholder='Quote' value={tempQuote} onChange={e => setTempQuote(e.target.value)} />\n            <input type='submit' value='Update quote' />\n        </form>\n    </div>\n        )\n}\n\nexport default Dashboard"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}