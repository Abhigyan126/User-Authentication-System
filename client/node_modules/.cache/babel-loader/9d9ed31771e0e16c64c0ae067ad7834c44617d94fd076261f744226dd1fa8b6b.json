{"ast":null,"code":"var _jsxFileName = \"/Users/abhigyan/Documents/mern/client/src/pages/quote.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport jwt from 'jsonwebtoken';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const [quote, setQuote] = useState('');\n  const [tempQuote, setTempQuote] = useState('');\n  const [userInfo, setUserInfo] = useState({\n    username: '',\n    email: ''\n  });\n  const fetchQuote = async () => {\n    try {\n      const response = await fetch('http://localhost:1337/api/quote', {\n        headers: {\n          'X-access-token': localStorage.getItem('token')\n        }\n      });\n      const data = await response.json();\n      if (data.status === 'ok') {\n        setQuote(data.quote);\n      } else {\n        alert(data.error);\n      }\n    } catch (error) {\n      alert('Error fetching quote');\n    }\n  };\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      const user = jwt.decode(token);\n      if (!user) {\n        localStorage.removeItem('token');\n        navigate('/login');\n      } else {\n        setUserInfo({\n          username: user.Name,\n          email: user.email\n        });\n        fetchQuote();\n      }\n    } else {\n      navigate('/login');\n    }\n  }, [navigate]);\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    navigate('/login');\n  };\n  const handleQuoteUpdate = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:1337/api/quote', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-access-token': localStorage.getItem('token')\n        },\n        body: JSON.stringify({\n          quote: tempQuote\n        })\n      });\n      const data = await response.json();\n      if (data.status === 'ok') {\n        setQuote(tempQuote);\n        setTempQuote('');\n      } else {\n        alert(data.error);\n      }\n    } catch (error) {\n      alert('Error updating quote');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rectangle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Welcome, \", userInfo.username || 'User']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Email: \", userInfo.email || 'Email not available']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Your quote: \", quote || 'No quote found']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleQuoteUpdate,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Quote\",\n        value: tempQuote,\n        onChange: e => setTempQuote(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Update quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleLogout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"ef+WHlkhe8rdRDFYwpFzGC5kmXU=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","jwt","useNavigate","jsxDEV","_jsxDEV","Dashboard","_s","navigate","quote","setQuote","tempQuote","setTempQuote","userInfo","setUserInfo","username","email","fetchQuote","response","fetch","headers","localStorage","getItem","data","json","status","alert","error","token","user","decode","removeItem","Name","handleLogout","handleQuoteUpdate","e","preventDefault","method","body","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["/Users/abhigyan/Documents/mern/client/src/pages/quote.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport jwt from 'jsonwebtoken'\nimport { useNavigate } from 'react-router-dom'\n\nconst Dashboard = () => {\n    const navigate = useNavigate()\n    const [quote, setQuote] = useState('')\n    const [tempQuote, setTempQuote] = useState('')\n    const [userInfo, setUserInfo] = useState({ username: '', email: '' })\n    \n    const fetchQuote = async () => {\n        try {\n            const response = await fetch('http://localhost:1337/api/quote', {\n                headers: {\n                    'X-access-token': localStorage.getItem('token'),\n                },\n            })\n\n            const data = await response.json()\n            if (data.status === 'ok') {\n                setQuote(data.quote)\n            } else {\n                alert(data.error)\n            }\n        } catch (error) {\n            alert('Error fetching quote')\n        }\n    }\n\n    useEffect(() => {\n        const token = localStorage.getItem('token')\n        if (token) {\n            const user = jwt.decode(token)\n            if (!user) {\n                localStorage.removeItem('token')\n                navigate('/login')\n            } else {\n                setUserInfo({ username: user.Name, email: user.email })\n                fetchQuote()\n            }\n        } else {\n            navigate('/login')\n        }\n    }, [navigate])\n\n    const handleLogout = () => {\n        localStorage.removeItem('token')\n        navigate('/login')\n    }\n\n    const handleQuoteUpdate = async (e) => {\n        e.preventDefault()\n        try {\n            const response = await fetch('http://localhost:1337/api/quote', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-access-token': localStorage.getItem('token'),\n                },\n                body: JSON.stringify({ quote: tempQuote }),\n            })\n\n            const data = await response.json()\n            if (data.status === 'ok') {\n                setQuote(tempQuote)\n                setTempQuote('')\n            } else {\n                alert(data.error)\n            }\n        } catch (error) {\n            alert('Error updating quote')\n        }\n    }\n\n    return (\n        <div className=\"form-container\">\n            <div className=\"rectangle\"></div>\n            <h3>Welcome, {userInfo.username || 'User'}</h3>\n            <h4>Email: {userInfo.email || 'Email not available'}</h4>\n            <h3>Your quote: {quote || 'No quote found'}</h3>\n            <form onSubmit={handleQuoteUpdate}>\n                <input\n                    type='text'\n                    placeholder='Quote'\n                    value={tempQuote}\n                    onChange={e => setTempQuote(e.target.value)}\n                />\n                <input type='submit' value='Update quote' />\n                <button type='button' onClick={handleLogout}>Logout</button>\n            </form>\n        </div>\n    )\n}\n\nexport default Dashboard\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}